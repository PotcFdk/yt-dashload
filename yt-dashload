#!/bin/bash

# Copyright 2014 PotcFdk
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

fatal ()
{
    echo -e >&2 "$@"
    exit 1
}

echo "= yt-dashload ="

# Prerequisites

# Command line arguments
[ "$#" -eq 0 ] && fatal "Usage:\n"\
"$0 [YouTube video url]"
[ "$#" -eq 1 ] || fatal "1 argument required, $# provided"

# ffmpeg / avconv
command -v ffmpeg >/dev/null 2>&1 && {
	ENCODER="ffmpeg"
} || command -v avconv >/dev/null 2>&1 && {
	ENCODER="avconv"
} || fatal "Please install ffmpeg or avconv."

# youtube-dl
[ ! -f youtube-dl ] && fatal "Please put youtube-dl into this directory.\n"\
"You can download youtube-dl at https://yt-dl.org"

# youtube-dl permissions
[ ! -x youtube-dl ] && fatal "Please make youtube-dl executable. (chmod +x youtube-dl)"

URL="$1"
echo "URL: $URL"

VIDEO_ID=$(./youtube-dl --get-id "$URL") || fatal "Error fetching metadata."
echo "VideoID: $VIDEO_ID"

VIDEO_TITLE=$(./youtube-dl -e "$URL") || fatal "Error fetching metadata."
echo "Title: $VIDEO_TITLE"

# Check

[ -f "$VIDEO_TITLE.mp4" ] && fatal "Destination file '$VIDEO_TITLE.mp4' exists already!\nAborting."

# Video

# Formats:
# 160         mp4       144p        DASH video , video only
# 133         mp4       240p        DASH video , video only
# 134         mp4       360p        DASH video , video only
# 135         mp4       480p        DASH video , video only
# 136         mp4       720p        DASH video , video only
# 137         mp4       1080p       DASH video , video only
# 264         mp4       1440p       DASH video , video only
# 138         mp4       2160p       DASH video , video only

echo "Downloading video..."

TMP_VIDEO="$VIDEO_ID.video.tmp"
./youtube-dl -f 138/264/137/136/135/134/133/160 -o "$TMP_VIDEO" "$URL" || fatal "Download error."

# Audio

# Formats:
# 171         webm      audio only  DASH audio , audio@ 48k
# 140         m4a       audio only  DASH audio , audio@128k

echo "Downloading audio..."

TMP_AUDIO="$VIDEO_ID.audio.tmp"
./youtube-dl -f 140/171 -o "$TMP_AUDIO" "$URL" || fatal "Download error"

# Merge video and audio

echo "Merging audio and video..."

$ENCODER -i "$TMP_VIDEO" -i "$TMP_AUDIO" -c copy file:"$VIDEO_TITLE.mp4" || {
	rm "$VIDEO_TITLE.mp4" 2> /dev/null
	fatal "Conversion error."
}

# Cleanup

rm "$TMP_VIDEO"
rm "$TMP_AUDIO"

# Success

echo "Saved to $VIDEO_TITLE.mp4"
